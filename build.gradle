plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    maven {
        url = "https://libraries.minecraft.net/"
    }
    maven {
        url = "https://repo.cleanroommc.com/releases"
    }
    maven {
        url = "https://maven.outlands.top/releases"
    }
    mavenCentral()
}

group = 'top.outlands'
base.archivesName = 'foundation'
version = '0.17.2'
java { 
    targetCompatibility = JavaVersion.VERSION_21 
}

dependencies {
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'org.javassist:javassist:3.30.2-GA'
    implementation 'org.apache.logging.log4j:log4j-core:2.25.2'
    implementation 'org.apache.logging.log4j:log4j-api:2.25.2'
    implementation 'com.google.guava:guava:33.5.0-jre'
    implementation 'zone.rong:imaginebreaker:2.1'
    implementation 'org.ow2.asm:asm:9.9'
    implementation "net.lenni0451:Reflect:1.5.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.13.4'
    testImplementation 'com.google.guava:guava:33.5.0-jre'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.14.0'

}

compileJava {
    options.compilerArgs += [
            '--add-exports=java.base/jdk.internal.reflect=ALL-UNNAMED',
            '--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED'
    ]
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

test {
    useJUnitPlatform()
    filter {
        includeTestsMatching("*Test")
    }
}

tasks.register('testTools', Test) {
    group = 'verification'

    useJUnitPlatform()

    test {
        useJUnitPlatform()
        filter {
            includeTestsMatching("*Test")
        }
    }

    maxHeapSize = '1G'

    testLogging {
        events "passed"
    }

    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

artifacts {
    archives jar
    archives sourcesJar
}

publishing {
    repositories {
        maven {
            name = "cleanroom"
            url = "https://repo.cleanroommc.com/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = "foundation"
            version = project.version
            artifact sourcesJar
            from components.java
        }
    }
}